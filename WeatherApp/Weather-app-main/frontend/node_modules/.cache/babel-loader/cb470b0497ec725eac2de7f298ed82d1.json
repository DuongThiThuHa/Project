{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      error: false,\n      success: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    loginFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    registerStart: state => {\n      state.register.isFetching = true;\n    },\n    registerSuccess: state => {\n      state.register.isFetching = false;\n      state.register.error = false;\n      state.register.success = true;\n    },\n    registerFailed: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n      state.register.success = false;\n    },\n    logOutSuccess: state => {\n      state.login.isFetching = false;\n      state.login.currentUser = null;\n      state.login.error = false;\n    },\n    logOutFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    logOutStart: state => {\n      state.login.isFetching = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFailed,\n  loginSuccess,\n  registerStart,\n  registerSuccess,\n  registerFailed,\n  logOutStart,\n  logOutSuccess,\n  logOutFailed\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["D:/csdlNangcao/Web_app/frontend/src/redux/authSlice.js"],"names":["createSlice","authSlice","name","initialState","login","currentUser","isFetching","error","register","success","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","registerStart","registerSuccess","registerFailed","logOutSuccess","logOutFailed","logOutStart","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState:{\r\n        login:{\r\n            currentUser:null,\r\n            isFetching: false,\r\n            error:false\r\n        },\r\n        register:{\r\n            isFetching: false,\r\n            error:false,\r\n            success:false\r\n        },\r\n    },\r\n    reducers:{\r\n        loginStart: (state) =>{\r\n            state.login.isFetching = true;\r\n        },\r\n        loginSuccess: (state,action) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = action.payload;\r\n            state.login.error = false;\r\n        },\r\n        loginFailed: (state) =>{\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n        registerStart: (state) =>{\r\n            state.register.isFetching = true;\r\n        },\r\n        registerSuccess: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = false;\r\n            state.register.success = true;\r\n        },\r\n        registerFailed: (state) =>{\r\n            state.register.isFetching = false;\r\n            state.register.error = true;\r\n            state.register.success = false;\r\n        },\r\n        logOutSuccess: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = null;\r\n            state.login.error = false;\r\n        },\r\n        logOutFailed: (state) =>{\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n        logOutStart: (state) =>{\r\n            state.login.isFetching = true;\r\n        },\r\n     \r\n    }\r\n});\r\n\r\nexport const {\r\n    loginStart,\r\n    loginFailed,\r\n    loginSuccess,\r\n    registerStart,\r\n    registerSuccess,\r\n    registerFailed,\r\n    logOutStart,\r\n    logOutSuccess,\r\n    logOutFailed\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}