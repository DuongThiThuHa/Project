{"ast":null,"code":"import axios from \"axios\";\nimport { loginFailed, loginStart, loginSuccess, logOutFailed, logOutStart, logOutSuccess, registerFailed, registerStart, registerSuccess } from \"./authSlice\";\nimport { // deleteUserFailed,\n// deleteUsersSuccess,\n// deleteUserStart,\ngetUsersFailed, getUsersStart, getUsersSuccess } from \"./userSlice\"; //npm install axios\n\nexport const loginUser = async (user, dispatch, navigate) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await axios.post(\"/v1/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n    navigate(\"/HomePage\");\n  } catch (err) {\n    dispatch(loginFailed());\n  }\n};\nexport const registerUser = async (user, dispatch, navigate) => {\n  dispatch(registerStart());\n\n  try {\n    await axios.post(\"/v1/auth/register\", user);\n    dispatch(registerSuccess());\n    navigate(\"/\");\n  } catch (err) {\n    dispatch(registerFailed());\n  }\n};\nexport const getAllUsers = async (accessToken, dispatch, axiosJWT) => {\n  dispatch(getUsersStart());\n\n  try {\n    const res = await axiosJWT.get(\"/v1/user\", {\n      headers: {\n        token: `Bearer ${accessToken}`\n      }\n    });\n    dispatch(getUsersSuccess(res.data));\n  } catch (err) {\n    dispatch(getUsersFailed());\n  }\n};\nexport const logOut = async (dispatch, id, navigate, accessToken, axiosJWT) => {\n  dispatch(logOutStart());\n\n  try {\n    await axiosJWT.post(\"/v1/auth/logout\", id, {\n      headers: {\n        token: `Bearer ${accessToken}`\n      }\n    });\n    dispatch(logOutSuccess());\n    navigate(\"/\");\n  } catch (err) {\n    dispatch(logOutFailed());\n  }\n};","map":{"version":3,"sources":["D:/csdlNangcao/Web_app/frontend/src/redux/apiRequest.js"],"names":["axios","loginFailed","loginStart","loginSuccess","logOutFailed","logOutStart","logOutSuccess","registerFailed","registerStart","registerSuccess","getUsersFailed","getUsersStart","getUsersSuccess","loginUser","user","dispatch","navigate","res","post","data","err","registerUser","getAllUsers","accessToken","axiosJWT","get","headers","token","logOut","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,aANF,EAOEC,cAPF,EAQEC,aARF,EASEC,eATF,QAUO,aAVP;AAWA,SACE;AACA;AACA;AACAC,cAJF,EAKEC,aALF,EAMEC,eANF,QAOO,aAPP,C,CAQA;;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,IAAP,EAAaC,QAAb,EAAuBC,QAAvB,KAAoC;AAC3DD,EAAAA,QAAQ,CAACb,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMe,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,gBAAX,EAA6BJ,IAA7B,CAAlB;AACAC,IAAAA,QAAQ,CAACZ,YAAY,CAACc,GAAG,CAACE,IAAL,CAAb,CAAR;AACAH,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,GAJD,CAIE,OAAOI,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AACD;AACF,CATM;AAWP,OAAO,MAAMoB,YAAY,GAAG,OAAOP,IAAP,EAAaC,QAAb,EAAuBC,QAAvB,KAAoC;AAC9DD,EAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAMR,KAAK,CAACkB,IAAN,CAAW,mBAAX,EAAgCJ,IAAhC,CAAN;AACAC,IAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACAO,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAJD,CAIE,OAAOI,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;AACD;AACF,CATM;AAWP,OAAO,MAAMe,WAAW,GAAG,OAAOC,WAAP,EAAoBR,QAApB,EAA8BS,QAA9B,KAA2C;AACpET,EAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMO,QAAQ,CAACC,GAAT,CAAa,UAAb,EAAyB;AACzCC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAG,UAASJ,WAAY;AAA/B;AADgC,KAAzB,CAAlB;AAGAR,IAAAA,QAAQ,CAACH,eAAe,CAACK,GAAG,CAACE,IAAL,CAAhB,CAAR;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD;AACF,CAVM;AAYP,OAAO,MAAMkB,MAAM,GAAG,OAAOb,QAAP,EAAiBc,EAAjB,EAAqBb,QAArB,EAA+BO,WAA/B,EAA4CC,QAA5C,KAAyD;AAC7ET,EAAAA,QAAQ,CAACV,WAAW,EAAZ,CAAR;;AACA,MAAI;AACF,UAAMmB,QAAQ,CAACN,IAAT,CAAc,iBAAd,EAAiCW,EAAjC,EAAqC;AACzCH,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAG,UAASJ,WAAY;AAA/B;AADgC,KAArC,CAAN;AAGAR,IAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACAU,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAND,CAME,OAAOI,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACX,YAAY,EAAb,CAAR;AACD;AACF,CAXM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  loginFailed,\r\n  loginStart,\r\n  loginSuccess,\r\n  logOutFailed,\r\n  logOutStart,\r\n  logOutSuccess,\r\n  registerFailed,\r\n  registerStart,\r\n  registerSuccess,\r\n} from \"./authSlice\";\r\nimport {\r\n  // deleteUserFailed,\r\n  // deleteUsersSuccess,\r\n  // deleteUserStart,\r\n  getUsersFailed,\r\n  getUsersStart,\r\n  getUsersSuccess,\r\n} from \"./userSlice\";\r\n//npm install axios\r\n\r\nexport const loginUser = async (user, dispatch, navigate) => {\r\n  dispatch(loginStart());\r\n  try {\r\n    const res = await axios.post(\"/v1/auth/login\", user);\r\n    dispatch(loginSuccess(res.data));\r\n    navigate(\"/HomePage\");\r\n  } catch (err) {\r\n    dispatch(loginFailed());\r\n  }\r\n};\r\n\r\nexport const registerUser = async (user, dispatch, navigate) => {\r\n  dispatch(registerStart());\r\n  try {\r\n    await axios.post(\"/v1/auth/register\", user);\r\n    dispatch(registerSuccess());\r\n    navigate(\"/\");\r\n  } catch (err) {\r\n    dispatch(registerFailed());\r\n  }\r\n};\r\n\r\nexport const getAllUsers = async (accessToken, dispatch, axiosJWT) => {\r\n  dispatch(getUsersStart());\r\n  try {\r\n    const res = await axiosJWT.get(\"/v1/user\", {\r\n      headers: { token: `Bearer ${accessToken}` },\r\n    });\r\n    dispatch(getUsersSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(getUsersFailed());\r\n  }\r\n};\r\n\r\nexport const logOut = async (dispatch, id, navigate, accessToken, axiosJWT) => {\r\n  dispatch(logOutStart());\r\n  try {\r\n    await axiosJWT.post(\"/v1/auth/logout\", id, {\r\n      headers: { token: `Bearer ${accessToken}` },\r\n    });\r\n    dispatch(logOutSuccess());\r\n    navigate(\"/\");\r\n  } catch (err) {\r\n    dispatch(logOutFailed());\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}